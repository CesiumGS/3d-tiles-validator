{
  "name": "3d-tiles-validator",
  "version": "0.2.0",
  "license": "Apache-2.0",
  "description": "Tools for validating 3D Tiles tilesets.",
  "keywords": [
    "3D Tiles"
  ],
  "homepage": "https://github.com/CesiumGS/3d-tiles-validator/",
  "repository": {
    "type": "git",
    "url": "https://github.com/CesiumGS/3d-tiles-validator.git"
  },
  "bugs": {
    "url": "https://github.com/CesiumGS/3d-tiles-validator/issues"
  },
  "engines": {
    "node": ">=14.0.0"
  },
  "main": "./build/index.js",
  "types": "./build/index.d.ts",
  "bin": {
    "3d-tiles-validator": "./build/main"
  },
  "dependencies": {
    "archiver": "^5.3.1",
    "better-sqlite3": "^8.0.1",
    "cesium": "^1.97.0",
    "gltf-validator": "^2.0.0-dev.3.9",
    "minimatch": "^5.1.0",
    "node-stream-zip": "^1.10.1",
    "yargs": "^17.5.1",
    "zlib": "^1.0.5"
  },
  "devDependencies": {
    "@microsoft/api-documenter": "^7.19.24",
    "@microsoft/api-extractor": "^7.33.6",
    "@types/archiver": "^5.3.1",
    "@types/better-sqlite3": "^7.6.2",
    "@types/jasmine": "^4.0.3",
    "@types/minimatch": "^5.1.2",
    "@typescript-eslint/eslint-plugin": "^5.38.0",
    "@typescript-eslint/parser": "^5.38.0",
    "copyfiles": "^2.4.1",
    "eslint": "^8.23.1",
    "eslint-config-cesium": "^9.0.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-tsdoc": "^0.2.17",
    "jasmine": "^4.3.0",
    "mkdirp": "^1.0.4",
    "nyc": "^15.1.0",
    "prettier": "2.7.1",
    "ts-node": "^10.9.1",
    "typescript": "^4.8.3"
  },
  "scripts": {
    "about:start": "echo 'Start the validator, as a TypeScript command line application'",
    "start": "npx ts-node src/main.ts",
    "about:eslint": "echo 'Perform linting of the source code. This may modify the source files.'",
    "eslint": "eslint \"./**/*.ts\" --cache",
    "about:build": "echo 'Run the TypeScript compiler to generate the build output.'",
    "build": "npx tsc",
    "about:test": "echo 'Execute the unit tests'",
    "test": "ts-node node_modules/jasmine/bin/jasmine --config=specs/jasmine.json",
    "about:coverage": "echo 'Compute the test coverage'",
    "coverage": "nyc npm run test",
    "about:prettier-check": "echo 'Check the formatting of the source code (without fixing formatting errors).'",
    "prettier-check": "prettier --check \"**/*\"",
    "about:prettier": "echo 'Ensure the right formatting of the source code, automatically fixing formatting errors.'",
    "prettier": "prettier --write \"**/*\"",
    "about:generate-third-party": "echo 'Update the ThirdParty.json file with the most recent dependency versions'",
    "generate-third-party": "node generateThirdParty.js",
    "about:docs-prepare-directory": "echo 'Prepare the output directory for the API definition'",
    "docs-prepare-directory": "mkdirp etc",
    "about:docs-extract-api": "echo 'Extract the API definition file from the current build output.'",
    "docs-extract-api": "api-extractor run --config api-extractor.jsonc --local --verbose",
    "about:docs-generate-markdown": "echo 'Generate the API documentation based on the API definition file'",
    "docs-generate-markdown": "api-documenter markdown -i build/api-extractor -o build/docs",
    "about:docs-generate": "echo 'Generate the API documentation based on the current build output'",
    "docs-generate": "npm run docs-prepare-directory && npm run docs-extract-api && npm run docs-generate-markdown",
    "about:docs": "echo 'Perform a build and generate the API documentation based on the build output'",
    "docs": "npm run build && npm run docs-generate",
    "about:package-clean": "echo 'Clean the build output folder'",
    "package-clean": "node -e \"require('fs-extra').emptyDir('build');\"",
    "about:package-prepare": "echo 'Prepare a package: Linting, formatting, build, test, documentation, and third-party information updates'",
    "package-prepare": "npm run eslint && npm run prettier-check && npm run build && npm run test && npm run docs-generate && npm run generate-third-party",
    "about:package-copy": "Copy the entry point for the application from the bin to the build directory",
    "package-copy": "npx copyfiles --flat bin/main build",
    "about:package": "echo 'Prepare a package that can then be published on NPM'",
    "package": "npm run package-clean && npm run package-prepare && npm run package-copy && npm pack"
  }
}
